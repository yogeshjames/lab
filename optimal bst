#include <bits/stdc++.h>
using namespace std;

int sum(vector<int>& freq, int i, int j) {
    int s = 0;
    for (int k = i; k <= j; k++)
        s += freq[k];
    return s;
}

int optimalBST(vector<int>& keys, vector<int>& freq, int n) {
    vector<vector<int>> cost(n, vector<int>(n, 0));

    for (int i = 0; i < n; i++)
        cost[i][i] = freq[i];

    for (int L = 2; L <= n; L++) {
        for (int i = 0; i < n - L + 1; i++) {
            int j = i + L - 1;
            cost[i][j] = INT_MAX;
            int totalFreq = sum(freq, i, j);

            for (int r = i; r <= j; r++) {
                int left = (r > i) ? cost[i][r-1] : 0;
                int right = (r < j) ? cost[r+1][j] : 0;
                cost[i][j] = min(cost[i][j], left + right + totalFreq);
            }
        }
    }
    return cost[0][n-1];
}

int main() {
    vector<int> keys = {10, 20, 30};
    vector<int> freq = {34, 8, 50};
    cout << "Minimum cost of Optimal BST: " << optimalBST(keys, freq, keys.size()) << endl;
    return 0;
}
